/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.temporal.ChronoUnit;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import supporting_classes.DatabaseConnection;
import supporting_classes.UILook;

/**
 *
 * @author asd
 */
public class FacultySignUp extends javax.swing.JFrame {

    /**
     * Creates new form studentSignUp
     */
    int val;
    String id, name, dept;

    {
        UILook.changeLook(this);
    }

    ImageIcon img1 = new ImageIcon(getClass().getResource("/images/back.png"));
    ImageIcon img2 = new ImageIcon(getClass().getResource("/images/back2.png"));

    public FacultySignUp() {
        initComponents();
        jLabel2.setText("");
        this.setLocationRelativeTo(null);
    }

    public FacultySignUp(String id, String dept) {
        this();
        this.val = 2;
        this.id = id;
        this.dept = dept;
        setFData();
    }

    public FacultySignUp(int val, String id, String dept) {
        this();
        this.val = val;
        this.id = id;
//        this.name = name;
        this.dept = dept;
        setHData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jtfFirstName = new javax.swing.JTextField();
        jtfLastName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtfFacultyId = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jtfEmailId = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jtfUserId = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jtfContactNo = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jtfPos = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jButtonReset = new javax.swing.JButton();
        jButtonSubmit = new javax.swing.JButton();
        jtfMName = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jtfDept = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPasswordField2 = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 18, 54));
        jPanel1.setPreferredSize(new java.awt.Dimension(1080, 93));

        jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Enter Your Details");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.png"))); // NOI18N
        jLabel19.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel19MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel19MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel19MousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 591, Short.MAX_VALUE)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel3.setBackground(new java.awt.Color(0, 18, 54));
        jPanel3.setPreferredSize(new java.awt.Dimension(1080, 36));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1080, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel3, java.awt.BorderLayout.PAGE_END);

        jPanel5.setBackground(new java.awt.Color(255, 230, 153));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("First Name");

        jtfFirstName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtfFirstName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfFirstNameMouseClicked(evt);
            }
        });

        jtfLastName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Last Name");

        jtfFacultyId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtfFacultyId.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfFacultyIdMouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Faculty Id");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Email Id");

        jtfEmailId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("User Id");

        jtfUserId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("Contact No.");

        jtfContactNo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("Password");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("Confirm Password");

        jLabel11.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setText("Gender");

        jtfPos.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel13.setText("Date of birth");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setText("Position");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel15.setText("Qualifications");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel18.setText("Middle Name");

        jRadioButton1.setBackground(new java.awt.Color(255, 230, 153));
        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton1.setText("Male");
        jRadioButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton1MouseClicked(evt);
            }
        });

        jRadioButton3.setBackground(new java.awt.Color(255, 230, 153));
        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton3.setText("Others");
        jRadioButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton3MouseClicked(evt);
            }
        });

        jRadioButton2.setBackground(new java.awt.Color(255, 230, 153));
        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton2.setText("Female");
        jRadioButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton2MouseClicked(evt);
            }
        });

        jButtonReset.setBackground(new java.awt.Color(255, 230, 153));
        jButtonReset.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButtonReset.setText("Reset");
        jButtonReset.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonReset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });

        jButtonSubmit.setBackground(new java.awt.Color(255, 230, 153));
        jButtonSubmit.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButtonSubmit.setText("Submit");
        jButtonSubmit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonSubmit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubmitActionPerformed(evt);
            }
        });

        jtfMName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jDateChooser1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("*Details");

        jtfDept.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel16.setText("Department");

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jPasswordField1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPasswordField1.setEchoChar('*');

        jPasswordField2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPasswordField2.setEchoChar('*');

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(59, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(39, 39, 39))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtfUserId, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                                    .addComponent(jtfContactNo)
                                    .addComponent(jtfEmailId)
                                    .addComponent(jtfFacultyId)
                                    .addComponent(jtfLastName)
                                    .addComponent(jtfFirstName))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(8, 8, 8)))
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtfDept)
                                    .addComponent(jtfPos)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jtfMName)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jRadioButton1)
                                        .addGap(18, 18, 18)
                                        .addComponent(jRadioButton2)
                                        .addGap(18, 18, 18)
                                        .addComponent(jRadioButton3))))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jButtonSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(68, Short.MAX_VALUE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(jtfMName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jtfLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jRadioButton3)
                        .addComponent(jRadioButton2)
                        .addComponent(jRadioButton1)
                        .addComponent(jLabel12)))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jtfFacultyId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13))
                    .addComponent(jLabel11)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jtfEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jtfPos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jtfContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jtfDept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jtfUserId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonReset)
                    .addComponent(jButtonSubmit))
                .addGap(39, 39, 39))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel4, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(1096, 654));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed
        jtfFirstName.setText("");
        jtfLastName.setText("");
        jtfFacultyId.setText("");
        jtfEmailId.setText("");
        jtfContactNo.setText("");
        jtfUserId.setText("");
        jPasswordField1.setText("");
        jPasswordField2.setText("");
        jtfMName.setText("");
        jtfPos.setText("");
        jtfDept.setText("");
        jTextArea1.setText("");
        jRadioButton1.setSelected(false);
        jRadioButton3.setSelected(false);
        jRadioButton2.setSelected(false);

//        jLabel2.setText("*Fields Reseted Successfully");

    }//GEN-LAST:event_jButtonResetActionPerformed

    private void jButtonSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubmitActionPerformed

        if (val > 1) {
            String fName = jtfFirstName.getText();
            String lName = jtfLastName.getText();
            String emailId = jtfEmailId.getText();
            String contNo = jtfContactNo.getText();
            long contact = 0;
            try {
                contact = Long.parseLong(contNo);
            } catch (NumberFormatException ex) {
                ex.printStackTrace();
            }
            String userId = jtfUserId.getText();
            char ch[] = jPasswordField1.getPassword();
            String pass = new String(ch);
            char ch1[] = jPasswordField2.getPassword();
            String confPass = new String(ch1);
            String mName = jtfMName.getText();
            String gender = "";
            if (jRadioButton1.isSelected()) {
                gender = "Male";
            }
            if (jRadioButton2.isSelected()) {
                gender = "Female";
            }
            if (jRadioButton3.isSelected()) {
                gender = "Other";
            }

            String dates = null;
            int age = 0;
            Date ds1 = (Date) jDateChooser1.getDate();
            if (ds1 != null) {
                LocalDate ld = ds1.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                dates = ld.getDayOfMonth() + " / " + ld.getMonthValue() + " / " + ld.getYear();

                LocalDate today = LocalDate.now();
//                LocalDate birthDate = LocalDate.of(ld.getYear(), ld.getMonthValue(), ld.getDayOfMonth());
//                age = Period.between(ld, today).getYears();
                age = (int) ChronoUnit.YEARS.between(ld, today);
                System.out.println(age);
            }

            String pos = jtfPos.getText();
            String qual = jTextArea1.getText();

            String dept1 = jtfDept.getText();
            String nameIt = "";
            if (mName.equalsIgnoreCase("")) {
                nameIt = fName.concat(" ").concat(lName);
            } else {
                nameIt = fName.concat(" ").concat(mName).concat(" ").concat(lName);
            }
            if (!pass.equals(confPass)) {
                jLabel2.setText("*Confirm Password didn't match");
                jPasswordField1.setText("");
                jPasswordField2.requestFocus();
                return;
            } else {
                jLabel2.setText("");
            }

            if (fName.isEmpty() || lName.isEmpty() || id.isEmpty() || emailId.isEmpty() || contNo.isEmpty()
                    || userId.isEmpty() || pass.isEmpty() || confPass.isEmpty() || gender.isEmpty()
                    || pos.isEmpty() || qual.isEmpty() || ds1==null) {
                jLabel2.setText("*Please Complete All Fields");
            } else {

                try {
                    String facultyId = jtfFacultyId.getText();
                    if (!id.equals(facultyId)) {
                        jLabel2.setText("*Faculty Id can not be updated!!!!");
                        return;
                    }
                    jLabel2.setText("");
                    char ch2[] = jPasswordField1.getPassword();
                    String pass1 = new String(ch2);

                    String query = "";
                    if (val == 2) {
                        query = "UPDATE faculty_login "
                                + "SET `Name` = '" + nameIt + "',"
                                + "  `FacultyId` = '" + id + "',"
                                + "  `Age` = '" + age + "',"
                                + "  `Gender` = '" + gender + "',"
                                + "  `Contact` = '" + contact + "',"
                                + "  `Email` = '" + jtfEmailId.getText() + "',"
                                + "  `Qualifications` = '" + jTextArea1.getText() + "',"
                                + "  `Position` = '" + jtfPos.getText() + "',"
                                + "  `Department` = '" + jtfDept.getText() + "',"
                                + "  `UserId` = '" + jtfUserId.getText() + "',"
                                + "  `Password` = '" + pass1 + "'  WHERE FacultyId ='" + id + "'";
                    } else if (val == 3) {
                        query = "UPDATE hod_login "
                                + "SET `Name` = '" + nameIt + "',"
                                + "  `HodId` = '" + id + "',"
                                + "  `Age` = '" + age + "',"
                                + "  `Gender` = '" + gender + "',"
                                + "  `Contact` = '" + contact + "',"
                                + "  `Email` = '" + jtfEmailId.getText() + "',"
                                + "  `Qualifications` = '" + jTextArea1.getText() + "',"
                                + "  `Department` = '" + jtfDept.getText() + "',"
                                + "  `UserId` = '" + jtfUserId.getText() + "',"
                                + "  `Password` = '" + pass1 + "'  WHERE HodId ='" + id + "'";
                    }

                    Connection con = DatabaseConnection.getConnection();
                    Statement st = con.createStatement();

                    st.executeUpdate(query);
                    con.close();
                } catch (SQLException ex) {
                    ex.printStackTrace();//exception name with line no
                }
                JOptionPane.showMessageDialog(this, "Profile updated successfully");
                dispose();
//                FacultyDashboard fd = new FacultyDashboard(id, nameIt, dept1);
//                fd.setVisible(true);
            }
        } else {
            String fName = jtfFirstName.getText();
            String lName = jtfLastName.getText();
            String facultyId = jtfFacultyId.getText();
            String emailId = jtfEmailId.getText();

            String contNo = jtfContactNo.getText();
            long contact = 0;
            try {
                contact = Long.parseLong(contNo);
            } catch (NumberFormatException ex) {
                ex.printStackTrace();
            }
            String userId = jtfUserId.getText();
            char ch[] = jPasswordField1.getPassword();
            String pass = new String(ch);
            char ch1[] = jPasswordField2.getPassword();
            String confPass = new String(ch1);
            String mName = jtfMName.getText();
            String gender = "";
            if (jRadioButton1.isSelected()) {
                gender = "Male";
            }
            if (jRadioButton2.isSelected()) {
                gender = "Female";
            }
            if (jRadioButton3.isSelected()) {
                gender = "Other";
            }

            String dates = null;
            int age = 0;
            Date ds1 = (Date) jDateChooser1.getDate();
            if (ds1 != null) {
                LocalDate ld = ds1.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                dates = ld.getDayOfMonth() + "/" + ld.getMonthValue() + "/" + ld.getYear();

                LocalDate today = LocalDate.now();
//                LocalDate birthDate = LocalDate.of(ld.getYear(), ld.getMonthValue(), ld.getDayOfMonth());
//                age = Period.between(birthDate, today).getYears();
                age = (int) ChronoUnit.YEARS.between(ld, today);
            }

            String pos = jtfPos.getText();
//            String qual= jtfQualifications.getText();
            String qual = jTextArea1.getText();

            String dept = jtfDept.getText();
            String nameIt = "";
            if (mName.equalsIgnoreCase("")) {
                nameIt = fName.concat(" ").concat(lName);
            } else {
                nameIt = fName.concat(" ").concat(mName).concat(" ").concat(lName);
            }

            if (!pass.equals(confPass)) {
                jLabel2.setText("*Confirm Password didn't match");
                jPasswordField1.setText("");
                jPasswordField2.requestFocus();
                return;
            } else {
                jLabel2.setText("");
            }

            if (fName.isEmpty() || lName.isEmpty() || facultyId.isEmpty() || emailId.isEmpty() || contNo.isEmpty()
                    || userId.isEmpty() || pass.isEmpty() || confPass.isEmpty() || gender.isEmpty()
                    || pos.isEmpty() || qual.isEmpty()) {
                jLabel2.setText("*Please Complete All Fields");
                return;
            } else if (pos.equalsIgnoreCase("hod") || pos.equalsIgnoreCase("Head of Department")) {
                try {
                    jLabel2.setText("");

                    try {
                        Connection con = DatabaseConnection.getConnection();
                        Statement stmt = con.createStatement();
                        String sql = "SELECT * FROM hod_login WHERE HodId='" + facultyId + "'";
                        ResultSet rs = stmt.executeQuery(sql);
                        if (rs.next()) {
                            jLabel2.setText("User Already Exists!!!!");
                            return;
                        }
                    } catch (SQLException ex) {
                        ex.printStackTrace();
                    }

                    Connection con = DatabaseConnection.getConnection();
                    PreparedStatement st = con.prepareStatement("INSERT INTO hod_login VALUES(?,?,?,?,?,?,?,?,?,?)");//SQL
                    st.setString(1, nameIt);
                    st.setString(2, facultyId);
                    st.setInt(3, age);
                    st.setString(4, gender);
                    st.setLong(5, contact);
                    st.setString(6, emailId);
                    st.setString(7, qual);
                    st.setString(8, dept);
                    st.setString(9, userId);
                    st.setString(10, pass);

                    st.executeUpdate();

                } catch (SQLException ex) {
                    ex.printStackTrace();//exception name with line no
                }

                JOptionPane.showMessageDialog(this, "Account created successfully");
//                new HomeScreen().setVisible(true);
                new Course(1, jtfFacultyId.getText(), jtfPos.getText()).setVisible(true);
                dispose();
            } else {
                try {
                    jLabel2.setText("");

                    try {
                        Connection con = DatabaseConnection.getConnection();
                        Statement stmt = con.createStatement();
                        String sql = "SELECT * FROM faculty_login WHERE FacultyId='" + facultyId + "'";
                        ResultSet rs = stmt.executeQuery(sql);
                        if (rs.next()) {
                            jLabel2.setText("User Already Exists!!!!");
                            return;
                        }
                    } catch (SQLException ex) {
                        ex.printStackTrace();
                    }

                    Connection con = DatabaseConnection.getConnection();
                    PreparedStatement st = con.prepareStatement("INSERT INTO faculty_login VALUES(?,?,?,?,?,?,?,?,?,?,?)");//SQL
                    st.setString(1, nameIt);
                    st.setString(2, facultyId);
                    st.setInt(3, age);
                    st.setString(4, gender);
                    st.setLong(5, contact);
                    st.setString(6, emailId);
                    st.setString(7, qual);
                    st.setString(8, pos);
                    st.setString(9, dept);
                    st.setString(10, userId);
                    st.setString(11, pass);

                    st.executeUpdate();

                } catch (SQLException ex) {
                    ex.printStackTrace();//exception name with line no
                }

                JOptionPane.showMessageDialog(this, "Account created successfully");
                //new HomeScreen().setVisible(true);
                new Course(1, jtfFacultyId.getText(), jtfPos.getText()).setVisible(true);
                dispose();
            }
        }
    }//GEN-LAST:event_jButtonSubmitActionPerformed

    private void jtfFirstNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfFirstNameMouseClicked
        String str = "*Fields Reseted Successfully";
        String str1 = jLabel2.getText();
        if (str.equals(str1)) {
            jLabel2.setText("");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfFirstNameMouseClicked

    private void jtfFacultyIdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfFacultyIdMouseClicked
        String str = "User Already Exists!!!!";
        String str2 = "*Faculty Id can not be updated!!!!";
        String str1 = jLabel2.getText();
        if (str.equals(str1) || str.equals(str2)) {
            jLabel2.setText("");
        }// TODO add your handling code here:
    }//GEN-LAST:event_jtfFacultyIdMouseClicked

    private void jLabel19MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseEntered
        jLabel19.setIcon(img2);
    }//GEN-LAST:event_jLabel19MouseEntered

    private void jLabel19MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseExited
        jLabel19.setIcon(img1);
    }//GEN-LAST:event_jLabel19MouseExited

    private void jRadioButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton1MouseClicked
        jRadioButton3.setSelected(false);
        jRadioButton2.setSelected(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1MouseClicked

    private void jRadioButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton2MouseClicked
        jRadioButton1.setSelected(false);
        jRadioButton3.setSelected(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2MouseClicked

    private void jRadioButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton3MouseClicked
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(false);

        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton3MouseClicked

    private void jLabel19MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MousePressed
        if (val == 3 || val == 2) {
            dispose();
        } else {
            val = 3;
            new HomeScreen().setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_jLabel19MousePressed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        if (val == 3 || val == 2) {
        } else {
            new HomeScreen().setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FacultySignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FacultySignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FacultySignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FacultySignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
       

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FacultySignUp().setVisible(true);
            }
        });
    }

    /*public void setData(int code) {
        try {
            //String query1 = "SELECT * FROM bunkercatcher.faculty_login WHERE FacultyId=?";
            String query,setterId;
            if(code==2){
                query= "SELECT * FROM bunkercatcher.faculty_login WHERE FacultyId=?";
                setterId="FacultyId";
            }
            else{
                query = "SELECT * FROM bunkercatcher.hod_login WHERE HodId=?";
                setterId="HodId";
            }
                /*Connection con = DatabaseConnection.getConnection();
            PreparedStatement ps = con.prepareStatement(query);
            ps.setString(1, id);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) 
            {
                String name[]=rs.getString("Name").split(" ");
                String fname,lname,mname;
                if(name.length == 3){
                    fname = name[0];
                    mname = name[1];
                    lname = name[name.length-1];
                }
                else{
                    fname=name[0];
                    mname="";
                    lname=name[name.length-1];
                }
                jtfFirstName.setText(fname);
                jtfMName.setText(mname);
                jtfLastName.setText(lname);
                jtfFacultyId.setText(rs.getString(setterId));
                
                jtfEmailId.setText(rs.getString("Email"));
                String cont = String.valueOf(rs.getLong("Contact"));
                jtfContactNo.setText(cont);
                jtfUserId.setText(rs.getString("UserId"));
                jPasswordField1.setText(rs.getString("Password"));
                jPasswordField2.setText(rs.getString("Password"));
                if(code == 3){
                    jtfPos.setText("HOD");
                }
                else{
                jtfPos.setText(rs.getString("Position"));
                }
                jtfDept.setText(rs.getString("Department"));
                String fi=rs.getString("Department");
                jLabel2.setText(fi);
                jTextArea1.setText(rs.getString("Qualifications"));
                String gender = rs.getString("Gender");
                if (gender.equalsIgnoreCase("Male")) {
                    jRadioButton1.setSelected(true);
                }
                if (gender.equalsIgnoreCase("Female")) {
                    jRadioButton2.setSelected(true);
                }
                if (gender.equalsIgnoreCase("Other")) {
                    jRadioButton3.setSelected(true);
                }
            
                 
            }
         catch (SQLException ex) {
            ex.printStackTrace();//exception name with line no
        }
    }

     */
    public void setFData() {
        try {
            /*String query;
                if(dept.equalsIgnoreCase("hod"))
                {
                query = "SELECT * FROM bunkercatcher.hod_login WHERE HodId=?";
                Connection con = DatabaseConnection.getConnection();
                PreparedStatement ps = con.prepareStatement(query); 
                ps.setString(1,id);
                ResultSet rs=ps.executeQuery();
                while(rs.next()){
                jtfFacultyId.setText(rs.getString("HodId"));
                jtfEmailId.setText(rs.getString("Email"));
                String cont = String.valueOf(rs.getLong("Contact"));
                jtfContactNo.setText(cont);
                jtfUserId.setText(rs.getString("UserId"));
                jPasswordField1.setText(rs.getString("Password"));
                jPasswordField2.setText(rs.getString("Password"));
                jtfPos.setText(rs.getString("Position"));
                jtfDept.setText(rs.getString("Department"));
                jTextArea1.setText(rs.getString("Qualifications"));
                String gender = rs.getString("Gender");
                if(gender.equalsIgnoreCase("Male")){
                    jRadioButton1.setSelected(true);
                }
                if(gender.equalsIgnoreCase("Female")){
                    jRadioButton2.setSelected(true);
                }
                if(gender.equalsIgnoreCase("Other")){
                    jRadioButton3.setSelected(true);
                }
                String name = rs.getString("Name");
                String[] arr = name.split(" ");
                int i=0;
                for(String temp: arr){
                   i=i+1;
                }
                if(i==3){
                    int j=0;
                    for(String temp: arr){
                     if(j==0){
                        jtfFirstName.setText(temp);
                        j++;}
                    else if (j==1){
                        jtfMName.setText(temp);
                        j++;}
                     else
                        jtfLastName.setText(temp);
                    }
                }
                else
                {
                    int j=0;
                    for(String temp: arr){
                     if(j==0){
                        jtfFirstName.setText(temp);
                        j++;
                     }
                     else
                        jtfLastName.setText(temp);
                    }
                }
                }
        }
        else
                {*/
            String query = "SELECT * FROM faculty_login WHERE FacultyId=?";
            Connection con = DatabaseConnection.getConnection();
            PreparedStatement ps = con.prepareStatement(query);
            ps.setString(1, id);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                jtfFacultyId.setText(rs.getString("FacultyId"));
                jtfEmailId.setText(rs.getString("Email"));
                String cont = String.valueOf(rs.getLong("Contact"));
                jtfContactNo.setText(cont);
                jtfUserId.setText(rs.getString("UserId"));
                jPasswordField1.setText(rs.getString("Password"));
                jPasswordField2.setText(rs.getString("Password"));
                jtfPos.setText(rs.getString("Position"));
                jtfDept.setText(rs.getString("Department"));
                jTextArea1.setText(rs.getString("Qualifications"));
                String gender = rs.getString("Gender");
                if (gender.equalsIgnoreCase("Male")) {
                    jRadioButton1.setSelected(true);
                }
                if (gender.equalsIgnoreCase("Female")) {
                    jRadioButton2.setSelected(true);
                }
                if (gender.equalsIgnoreCase("Other")) {
                    jRadioButton3.setSelected(true);
                }
                String name = rs.getString("Name");
                String[] arr = name.split(" ");
                int i = 0;
                for (String temp : arr) {
                    i = i + 1;
                }
                if (i == 3) {
                    int j = 0;
                    for (String temp : arr) {
                        if (j == 0) {
                            jtfFirstName.setText(temp);
                            j++;
                        } else if (j == 1) {
                            jtfMName.setText(temp);
                            j++;
                        } else {
                            jtfLastName.setText(temp);
                        }
                    }
                } else {
                    int j = 0;
                    for (String temp : arr) {
                        if (j == 0) {
                            jtfFirstName.setText(temp);
                            j++;
                        } else {
                            jtfLastName.setText(temp);
                        }
                    }
                }
            }
            //}
        } catch (SQLException ex) {
            ex.printStackTrace();//exception name with line no
        }
    }

    public void setHData() {
        try {
            String query = "SELECT * FROM hod_login WHERE HodId=?";
            Connection con = DatabaseConnection.getConnection();
            PreparedStatement ps = con.prepareStatement(query);
            ps.setString(1, id);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                jtfFacultyId.setText(rs.getString("HodId"));
                jtfEmailId.setText(rs.getString("Email"));
                String cont = String.valueOf(rs.getLong("Contact"));
                jtfContactNo.setText(cont);
                jtfUserId.setText(rs.getString("UserId"));
                jPasswordField1.setText(rs.getString("Password"));
                jPasswordField2.setText(rs.getString("Password"));
                jtfPos.setText("HOD");
                jtfDept.setText(rs.getString("Department"));
                jTextArea1.setText(rs.getString("Qualifications"));
                String gender = rs.getString("Gender");
                if (gender.equalsIgnoreCase("Male")) {
                    jRadioButton1.setSelected(true);
                }
                if (gender.equalsIgnoreCase("Female")) {
                    jRadioButton2.setSelected(true);
                }
                if (gender.equalsIgnoreCase("Other")) {
                    jRadioButton3.setSelected(true);
                }
                String name = rs.getString("Name");
                String[] arr = name.split(" ");
                int i = 0;
                for (String temp : arr) {
                    i = i + 1;
                }
                if (i == 3) {
                    int j = 0;
                    for (String temp : arr) {
                        if (j == 0) {
                            jtfFirstName.setText(temp);
                            j++;
                        } else if (j == 1) {
                            jtfMName.setText(temp);
                            j++;
                        } else {
                            jtfLastName.setText(temp);
                        }
                    }
                } else {
                    int j = 0;
                    for (String temp : arr) {
                        if (j == 0) {
                            jtfFirstName.setText(temp);
                            j++;
                        } else {
                            jtfLastName.setText(temp);
                        }
                    }
                }
            }
            jPasswordField1.setEchoChar((char) 0);
            jPasswordField2.setEchoChar((char) 0);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JButton jButtonSubmit;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jtfContactNo;
    private javax.swing.JTextField jtfDept;
    private javax.swing.JTextField jtfEmailId;
    private javax.swing.JTextField jtfFacultyId;
    private javax.swing.JTextField jtfFirstName;
    private javax.swing.JTextField jtfLastName;
    private javax.swing.JTextField jtfMName;
    private javax.swing.JTextField jtfPos;
    private javax.swing.JTextField jtfUserId;
    // End of variables declaration//GEN-END:variables
}
